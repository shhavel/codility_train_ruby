# frozen_string_literal: true

describe 'solution' do
  # M = 1_000_000
  # F = (f1, f2 = [0, 1])
  # while f2 < M
  #   f1, f2 = f2, f1 + f2
  #   F << f2 if f2 < M
  # end
  let(:fibonacci) do
    [0, 1, 1, 2, 3, 5, 8, 13, 21, 34,
     55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181,
     6765, 10946, 17711, 28657, 46368, 75025, 121393, 196418, 317811, 514229,
     832040]
  end

  def check(k)
    return true if fibonacci.include?(k)
    half = (k + 1) / 2
    fs = fibonacci.select { |f| f >= half && f <= k }
    fs.any? { |f| fibonacci.include?(k - f) }
  end

  it { expect(check(1)).to eq(true) }
  it { expect(check(2)).to eq(true) }
  it { expect(check(3)).to eq(true) }
  it { expect(check(8)).to eq(true) }
  it { expect(check(754)).to eq(true) }
  it { expect(check(755)).to eq(false) }

  # SUMS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 21, 22, 23, 24, 26, 29, 34, 35, 36, 37, 39, 42, 47, 55, 56, 57, 58, 60, 63, 68, 76, 89, 90, 91, 92, 94, 97, 102, 110, 123, 144, 145, 146, 147, 149, 152, 157, 165, 178, 199, 233, 234, 235, 236, 238, 241, 246, 254, 267, 288, 322, 377, 378, 379, 380, 382, 385, 390, 398, 411, 432, 466, 521, 610, 611, 612, 613, 615, 618, 623, 631, 644, 665, 699, 754, 843, 987, 988, 989, 990, 992, 995, 1000, 1008, 1021, 1042, 1076, 1131, 1220, 1364, 1597, 1598, 1599, 1600, 1602, 1605, 1610, 1618, 1631, 1652, 1686, 1741, 1830, 1974, 2207, 2584, 2585, 2586, 2587, 2589, 2592, 2597, 2605, 2618, 2639, 2673, 2728, 2817, 2961, 3194, 3571, 4181, 4182, 4183, 4184, 4186, 4189, 4194, 4202, 4215, 4236, 4270, 4325, 4414, 4558, 4791, 5168, 5778, 6765, 6766, 6767, 6768, 6770, 6773, 6778, 6786, 6799, 6820, 6854, 6909, 6998, 7142, 7375, 7752, 8362, 9349, 10946, 10947, 10948, 10949, 10951, 10954, 10959, 10967, 10980, 11001, 11035, 11090, 11179, 11323, 11556, 11933, 12543, 13530, 15127, 17711, 17712, 17713, 17714, 17716, 17719, 17724, 17732, 17745, 17766, 17800, 17855, 17944, 18088, 18321, 18698, 19308, 20295, 21892, 24476, 28657, 28658, 28659, 28660, 28662, 28665, 28670, 28678, 28691, 28712, 28746, 28801, 28890, 29034, 29267, 29644, 30254, 31241, 32838, 35422, 39603, 46368, 46369, 46370, 46371, 46373, 46376, 46381, 46389, 46402, 46423, 46457, 46512, 46601, 46745, 46978, 47355, 47965, 48952, 50549, 53133, 57314, 64079, 75025, 75026, 75027, 75028, 75030, 75033, 75038, 75046, 75059, 75080, 75114, 75169, 75258, 75402, 75635, 76012, 76622, 77609, 79206, 81790, 85971, 92736, 103682, 121393, 121394, 121395, 121396, 121398, 121401, 121406, 121414, 121427, 121448, 121482, 121537, 121626, 121770, 122003, 122380, 122990, 123977, 125574, 128158, 132339, 139104, 150050, 167761, 196418, 196419, 196420, 196421, 196423, 196426, 196431, 196439, 196452, 196473, 196507, 196562, 196651, 196795, 197028, 197405, 198015, 199002, 200599, 203183, 207364, 214129, 225075, 242786, 271443, 317811, 317812, 317813, 317814, 317816, 317819, 317824, 317832, 317845, 317866, 317900, 317955, 318044, 318188, 318421, 318798, 319408, 320395, 321992, 324576, 328757, 335522, 346468, 364179, 392836, 439204, 514229, 514230, 514231, 514232, 514234, 514237, 514242, 514250, 514263, 514284, 514318, 514373, 514462, 514606, 514839, 515216, 515826, 516813, 518410, 520994, 525175, 531940, 542886, 560597, 589254, 635622, 710647, 832040, 832041, 832042, 832043, 832045, 832048, 832053, 832061, 832074, 832095, 832129, 832184, 832273, 832417, 832650, 833027, 833637, 834624, 836221, 838805, 842986, 849751, 860697, 878408, 907065, 953433]
  # it 'returns true for every sum of two fibonacci numbers below 1_000_000' do
  #   SUMS.each do |sum|
  #     expect(check(sum)).to eq(true), "Expect check(#{sum}) to be true"
  #   end
  # end

  # it 'returns false for any number that is not a sum of two fibonacci numbers below 1_000_000' do
  #   (800000..801000).each do |n|
  #     expect(check(n)).to eq(false), "Expect check(#{n}) to be false"
  #   end
  # end
end
